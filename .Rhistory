#   strongInteractions[( strongInteractions[,1] %in% primGenesUnq | strongInteractions[,2] %in% primGenesUnq), ]
##strongInteractorsList = unique(c(strongInteractions[,1], strongInteractions[,2]))
##strongInteractorsList = unique(c(second))
tiff(filename=paste("./figures/string_db_analysis/","STRING_", subsetMapped[i,1], ".tiff", sep=""),
width = 5, height = 5, units = 'in', res = 250)
string_db$plot_network(primGenesUnq)
dev.off()
enrichProcess = string_db$get_enrichment(primGenesUnq, category = "Process", methodMT = "fdr", iea=T)
enrichComponent = string_db$get_enrichment(primGenesUnq, category = "Component", methodMT = "fdr", iea=T)
enrichFunction = string_db$get_enrichment(primGenesUnq, category = "Function", methodMT = "fdr", iea=T)
enrichProcess = enrichProcess[1:5, c("pvalue_fdr", "term_description")]
enrichComponent = enrichComponent[1:5, c("pvalue_fdr", "term_description")]
enrichFunction = enrichFunction[1:5, c("pvalue_fdr", "term_description")]
enrichMat = rbind(enrichProcess, enrichFunction, enrichComponent)
enrichMat[,1] = -log10(enrichMat[,1])
enrichMat = cbind(enrichMat, myType=factor(c( rep("Process", 5), rep("Function", 5), rep("Component", 5))) )
nameOrder = enrichMat$term_description[order(enrichMat$myType, enrichMat$pvalue_fdr)]
enrichMat$term_description = factor(enrichMat$term_description, levels=nameOrder)
tiff(filename=paste("./figures/string_db_analysis/","GO_", subsetMapped[i,1], ".tiff", sep=""),
width = 8, height = 4, units = 'in', res = 250)
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) + labs(x="-log10(pvalue_fdr)", y="") + facet_grid(myType ~ ., scales="free_y", space="free_y")
dev.off()
for (i in 1:length(hits) ){
hit = hits[i]
interactors = string_db$get_neighbors(hit)
interactions = string_db$get_interactions(c(hit, interactors))
strongInteractions = interactions[ interactions[,"combined_score"]>=300, ]
primInteractions =
strongInteractions[(strongInteractions[,1]==hit | strongInteractions[,2]==hit), ]
## sort genes and take top 10
primInteractionsSorted = primInteractions[order(-primInteractions[,"combined_score"]), ]
if (nrow(primInteractionsSorted)>=10){
primInteractionsSorted = primInteractionsSorted[1:10,]
}
primGenesUnq = unique(c(primInteractionsSorted[,1], primInteractionsSorted[,2]))
# secondInteractions =
#   strongInteractions[( strongInteractions[,1] %in% primGenesUnq | strongInteractions[,2] %in% primGenesUnq), ]
##strongInteractorsList = unique(c(strongInteractions[,1], strongInteractions[,2]))
##strongInteractorsList = unique(c(second))
tiff(filename=paste("./figures/string_db_analysis/","STRING_", subsetMapped[i,1], ".tiff", sep=""),
width = 5, height = 5, units = 'in', res = 250)
string_db$plot_network(primGenesUnq)
dev.off()
enrichProcess = string_db$get_enrichment(primGenesUnq, category = "Process", methodMT = "fdr", iea=T)
enrichComponent = string_db$get_enrichment(primGenesUnq, category = "Component", methodMT = "fdr", iea=T)
enrichFunction = string_db$get_enrichment(primGenesUnq, category = "Function", methodMT = "fdr", iea=T)
enrichProcess = enrichProcess[1:5, c("pvalue_fdr", "term_description")]
enrichComponent = enrichComponent[1:5, c("pvalue_fdr", "term_description")]
enrichFunction = enrichFunction[1:5, c("pvalue_fdr", "term_description")]
enrichMat = rbind(enrichProcess, enrichFunction, enrichComponent)
enrichMat[,1] = -log10(enrichMat[,1])
enrichMat = cbind(enrichMat, myType=factor(c( rep("Process", 5), rep("Function", 5), rep("Component", 5))) )
nameOrder = enrichMat$term_description[order(enrichMat$myType, enrichMat$pvalue_fdr)]
enrichMat$term_description = factor(enrichMat$term_description, levels=nameOrder)
tiff(filename=paste("./figures/string_db_analysis/","GO_", subsetMapped[i,1], ".tiff", sep=""),
width = 8, height = 4, units = 'in', res = 250)
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) + labs(x="-log10(pvalue_fdr)", y="") + facet_grid(myType ~ ., scales="free_y", space="free_y")
dev.off()
}
hit = hits[i]
interactors = string_db$get_neighbors(hit)
interactions = string_db$get_interactions(c(hit, interactors))
strongInteractions = interactions[ interactions[,"combined_score"]>=300, ]
primInteractions =
strongInteractions[(strongInteractions[,1]==hit | strongInteractions[,2]==hit), ]
## sort genes and take top 10
primInteractionsSorted = primInteractions[order(-primInteractions[,"combined_score"]), ]
if (nrow(primInteractionsSorted)>=10){
primInteractionsSorted = primInteractionsSorted[1:10,]
}
primGenesUnq = unique(c(primInteractionsSorted[,1], primInteractionsSorted[,2]))
# secondInteractions =
#   strongInteractions[( strongInteractions[,1] %in% primGenesUnq | strongInteractions[,2] %in% primGenesUnq), ]
##strongInteractorsList = unique(c(strongInteractions[,1], strongInteractions[,2]))
##strongInteractorsList = unique(c(second))
tiff(filename=paste("./figures/string_db_analysis/","STRING_", subsetMapped[i,1], ".tiff", sep=""),
width = 5, height = 5, units = 'in', res = 250)
string_db$plot_network(primGenesUnq)
dev.off()
enrichProcess = string_db$get_enrichment(primGenesUnq, category = "Process", methodMT = "fdr", iea=T)
enrichComponent = string_db$get_enrichment(primGenesUnq, category = "Component", methodMT = "fdr", iea=T)
enrichFunction = string_db$get_enrichment(primGenesUnq, category = "Function", methodMT = "fdr", iea=T)
enrichProcess = enrichProcess[1:5, c("pvalue_fdr", "term_description")]
enrichComponent = enrichComponent[1:5, c("pvalue_fdr", "term_description")]
enrichFunction = enrichFunction[1:5, c("pvalue_fdr", "term_description")]
enrichMat = rbind(enrichProcess, enrichFunction, enrichComponent)
enrichMat[,1] = -log10(enrichMat[,1])
enrichMat = cbind(enrichMat, myType=factor(c( rep("Process", 5), rep("Function", 5), rep("Component", 5))) )
nameOrder = enrichMat$term_description[order(enrichMat$myType, enrichMat$pvalue_fdr)]
enrichMat$term_description = factor(enrichMat$term_description, levels=nameOrder)
tiff(filename=paste("./figures/string_db_analysis/","GO_", subsetMapped[i,1], ".tiff", sep=""),
width = 8, height = 4, units = 'in', res = 250)
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) + labs(x="-log10(pvalue_fdr)", y="") + facet_grid(myType ~ ., scales="free_y", space="free_y")
dev.off()
for (i in 1:2){ ##length(hits) ) {
hit = hits[i]
interactors = string_db$get_neighbors(hit)
interactions = string_db$get_interactions(c(hit, interactors))
strongInteractions = interactions[ interactions[,"combined_score"]>=300, ]
primInteractions =
strongInteractions[(strongInteractions[,1]==hit | strongInteractions[,2]==hit), ]
## sort genes and take top 10
primInteractionsSorted = primInteractions[order(-primInteractions[,"combined_score"]), ]
if (nrow(primInteractionsSorted)>=10){
primInteractionsSorted = primInteractionsSorted[1:10,]
}
primGenesUnq = unique(c(primInteractionsSorted[,1], primInteractionsSorted[,2]))
# secondInteractions =
#   strongInteractions[( strongInteractions[,1] %in% primGenesUnq | strongInteractions[,2] %in% primGenesUnq), ]
##strongInteractorsList = unique(c(strongInteractions[,1], strongInteractions[,2]))
##strongInteractorsList = unique(c(second))
tiff(filename=paste("./figures/string_db_analysis/","STRING_", subsetMapped[i,1], ".tiff", sep=""),
width = 5, height = 5, units = 'in', res = 250)
string_db$plot_network(primGenesUnq)
dev.off()
enrichProcess = string_db$get_enrichment(primGenesUnq, category = "Process", methodMT = "fdr", iea=T)
enrichComponent = string_db$get_enrichment(primGenesUnq, category = "Component", methodMT = "fdr", iea=T)
enrichFunction = string_db$get_enrichment(primGenesUnq, category = "Function", methodMT = "fdr", iea=T)
enrichProcess = enrichProcess[1:5, c("pvalue_fdr", "term_description")]
enrichComponent = enrichComponent[1:5, c("pvalue_fdr", "term_description")]
enrichFunction = enrichFunction[1:5, c("pvalue_fdr", "term_description")]
enrichMat = rbind(enrichProcess, enrichFunction, enrichComponent)
enrichMat[,1] = -log10(enrichMat[,1])
enrichMat = cbind(enrichMat, myType=factor(c( rep("Process", 5), rep("Function", 5), rep("Component", 5))) )
nameOrder = enrichMat$term_description[order(enrichMat$myType, enrichMat$pvalue_fdr)]
enrichMat$term_description = factor(enrichMat$term_description, levels=nameOrder)
tiff(filename=paste("./figures/string_db_analysis/","GO_", subsetMapped[i,1], ".tiff", sep=""),
width = 8, height = 4, units = 'in', res = 250)
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) + labs(x="-log10(pvalue_fdr)", y="") + facet_grid(myType ~ ., scales="free_y", space="free_y")
dev.off()
}
tiff(filename=paste("./figures/string_db_analysis/","GO_", subsetMapped[i,1], ".tiff", sep=""),
width = 8, height = 4, units = 'in', res = 250)
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) + labs(x="-log10(pvalue_fdr)", y="") + facet_grid(myType ~ ., scales="free_y", space="free_y")
dev.off()
tiff(filename=paste("./figures/string_db_analysis/","STRING_", subsetMapped[i,1], ".tiff", sep=""),
width = 5, height = 5, units = 'in', res = 250)
string_db$plot_network(primGenesUnq)
dev.off()
for (i in 1:2){ ##length(hits) ) {
hit = hits[i]
interactors = string_db$get_neighbors(hit)
interactions = string_db$get_interactions(c(hit, interactors))
strongInteractions = interactions[ interactions[,"combined_score"]>=300, ]
primInteractions =
strongInteractions[(strongInteractions[,1]==hit | strongInteractions[,2]==hit), ]
## sort genes and take top 10
primInteractionsSorted = primInteractions[order(-primInteractions[,"combined_score"]), ]
if (nrow(primInteractionsSorted)>=10){
primInteractionsSorted = primInteractionsSorted[1:10,]
}
primGenesUnq = unique(c(primInteractionsSorted[,1], primInteractionsSorted[,2]))
# secondInteractions =
#   strongInteractions[( strongInteractions[,1] %in% primGenesUnq | strongInteractions[,2] %in% primGenesUnq), ]
##strongInteractorsList = unique(c(strongInteractions[,1], strongInteractions[,2]))
##strongInteractorsList = unique(c(second))
tiff(filename=paste("./figures/string_db_analysis/","STRING_", subsetMapped[i,1], ".tiff", sep=""),
width = 5, height = 5, units = 'in', res = 250)
string_db$plot_network(primGenesUnq)
dev.off()
enrichProcess = string_db$get_enrichment(primGenesUnq, category = "Process", methodMT = "fdr", iea=T)
enrichComponent = string_db$get_enrichment(primGenesUnq, category = "Component", methodMT = "fdr", iea=T)
enrichFunction = string_db$get_enrichment(primGenesUnq, category = "Function", methodMT = "fdr", iea=T)
enrichProcess = enrichProcess[1:5, c("pvalue_fdr", "term_description")]
enrichComponent = enrichComponent[1:5, c("pvalue_fdr", "term_description")]
enrichFunction = enrichFunction[1:5, c("pvalue_fdr", "term_description")]
enrichMat = rbind(enrichProcess, enrichFunction, enrichComponent)
enrichMat[,1] = -log10(enrichMat[,1])
enrichMat = cbind(enrichMat, myType=factor(c( rep("Process", 5), rep("Function", 5), rep("Component", 5))) )
nameOrder = enrichMat$term_description[order(enrichMat$myType, enrichMat$pvalue_fdr)]
enrichMat$term_description = factor(enrichMat$term_description, levels=nameOrder)
tiff(filename=paste("./figures/string_db_analysis/","GO_", subsetMapped[i,1], ".tiff", sep=""),
width = 8, height = 4, units = 'in', res = 250)
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) + labs(x="-log10(pvalue_fdr)", y="") + facet_grid(myType ~ ., scales="free_y", space="free_y")
dev.off()
for (i in 1:2){ ##length(hits) ) {
hit = hits[i]
interactors = string_db$get_neighbors(hit)
interactions = string_db$get_interactions(c(hit, interactors))
strongInteractions = interactions[ interactions[,"combined_score"]>=300, ]
primInteractions =
strongInteractions[(strongInteractions[,1]==hit | strongInteractions[,2]==hit), ]
## sort genes and take top 10
primInteractionsSorted = primInteractions[order(-primInteractions[,"combined_score"]), ]
if (nrow(primInteractionsSorted)>=10){
primInteractionsSorted = primInteractionsSorted[1:10,]
}
primGenesUnq = unique(c(primInteractionsSorted[,1], primInteractionsSorted[,2]))
# secondInteractions =
#   strongInteractions[( strongInteractions[,1] %in% primGenesUnq | strongInteractions[,2] %in% primGenesUnq), ]
##strongInteractorsList = unique(c(strongInteractions[,1], strongInteractions[,2]))
##strongInteractorsList = unique(c(second))
tiff(filename=paste("./figures/string_db_analysis/","STRING_", subsetMapped[i,1], ".tiff", sep=""),
width = 5, height = 5, units = 'in', res = 250)
string_db$plot_network(primGenesUnq)
dev.off()
enrichProcess = string_db$get_enrichment(primGenesUnq, category = "Process", methodMT = "fdr", iea=T)
enrichComponent = string_db$get_enrichment(primGenesUnq, category = "Component", methodMT = "fdr", iea=T)
enrichFunction = string_db$get_enrichment(primGenesUnq, category = "Function", methodMT = "fdr", iea=T)
enrichProcess = enrichProcess[1:5, c("pvalue_fdr", "term_description")]
enrichComponent = enrichComponent[1:5, c("pvalue_fdr", "term_description")]
enrichFunction = enrichFunction[1:5, c("pvalue_fdr", "term_description")]
enrichMat = rbind(enrichProcess, enrichFunction, enrichComponent)
enrichMat[,1] = -log10(enrichMat[,1])
enrichMat = cbind(enrichMat, myType=factor(c( rep("Process", 5), rep("Function", 5), rep("Component", 5))) )
nameOrder = enrichMat$term_description[order(enrichMat$myType, enrichMat$pvalue_fdr)]
enrichMat$term_description = factor(enrichMat$term_description, levels=nameOrder)
tiff(filename=paste("./figures/string_db_analysis/","GO_", subsetMapped[i,1], ".tiff", sep=""),
width = 8, height = 4, units = 'in', res = 250)
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) + labs(x="-log10(pvalue_fdr)", y="") + facet_grid(myType ~ ., scales="free_y", space="free_y")
dev.off()
}
for (i in 1:2){ ##length(hits) ) {
hit = hits[i]
interactors = string_db$get_neighbors(hit)
interactions = string_db$get_interactions(c(hit, interactors))
strongInteractions = interactions[ interactions[,"combined_score"]>=300, ]
primInteractions =
strongInteractions[(strongInteractions[,1]==hit | strongInteractions[,2]==hit), ]
## sort genes and take top 10
primInteractionsSorted = primInteractions[order(-primInteractions[,"combined_score"]), ]
if (nrow(primInteractionsSorted)>=10){
primInteractionsSorted = primInteractionsSorted[1:10,]
}
primGenesUnq = unique(c(primInteractionsSorted[,1], primInteractionsSorted[,2]))
# secondInteractions =
#   strongInteractions[( strongInteractions[,1] %in% primGenesUnq | strongInteractions[,2] %in% primGenesUnq), ]
##strongInteractorsList = unique(c(strongInteractions[,1], strongInteractions[,2]))
##strongInteractorsList = unique(c(second))
tiff(filename=paste("./figures/string_db_analysis/","STRING_", subsetMapped[i,1], ".tiff", sep=""),
width = 5, height = 5, units = 'in', res = 250)
string_db$plot_network(primGenesUnq)
dev.off()
enrichProcess = string_db$get_enrichment(primGenesUnq, category = "Process", methodMT = "fdr", iea=T)
enrichComponent = string_db$get_enrichment(primGenesUnq, category = "Component", methodMT = "fdr", iea=T)
enrichFunction = string_db$get_enrichment(primGenesUnq, category = "Function", methodMT = "fdr", iea=T)
enrichProcess = enrichProcess[1:5, c("pvalue_fdr", "term_description")]
enrichComponent = enrichComponent[1:5, c("pvalue_fdr", "term_description")]
enrichFunction = enrichFunction[1:5, c("pvalue_fdr", "term_description")]
enrichMat = rbind(enrichProcess, enrichFunction, enrichComponent)
enrichMat[,1] = -log10(enrichMat[,1])
enrichMat = cbind(enrichMat, myType=factor(c( rep("Process", 5), rep("Function", 5), rep("Component", 5))) )
nameOrder = enrichMat$term_description[order(enrichMat$myType, enrichMat$pvalue_fdr)]
enrichMat$term_description = factor(enrichMat$term_description, levels=nameOrder)
tiff(filename=paste("./figures/string_db_analysis/","GO_", subsetMapped[i,1], ".tiff", sep=""),
width = 8, height = 4, units = 'in', res = 250)
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) + labs(x="-log10(pvalue_fdr)", y="") + facet_grid(myType ~ ., scales="free_y", space="free_y")
dev.off()
print("lol")
}
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) + labs(x="-log10(pvalue_fdr)", y="") + facet_grid(myType ~ ., scales="free_y", space="free_y")
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) +
labs(x="-log10(pvalue_fdr)", y="") +
facet_grid(myType ~ ., scales="free_y", space="free_y")
tiff(filename=paste("./figures/string_db_analysis/","GO_", subsetMapped[i,1], ".tiff", sep=""),
width = 8, height = 4, units = 'in', res = 250)
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) +
labs(x="-log10(pvalue_fdr)", y="") +
facet_grid(myType ~ ., scales="free_y", space="free_y")
dev.off()
for (i in 1:1){ ##length(hits) ) {
hit = hits[i]
interactors = string_db$get_neighbors(hit)
interactions = string_db$get_interactions(c(hit, interactors))
strongInteractions = interactions[ interactions[,"combined_score"]>=300, ]
primInteractions =
strongInteractions[(strongInteractions[,1]==hit | strongInteractions[,2]==hit), ]
## sort genes and take top 10
primInteractionsSorted = primInteractions[order(-primInteractions[,"combined_score"]), ]
if (nrow(primInteractionsSorted)>=10){
primInteractionsSorted = primInteractionsSorted[1:10,]
}
primGenesUnq = unique(c(primInteractionsSorted[,1], primInteractionsSorted[,2]))
# secondInteractions =
#   strongInteractions[( strongInteractions[,1] %in% primGenesUnq | strongInteractions[,2] %in% primGenesUnq), ]
##strongInteractorsList = unique(c(strongInteractions[,1], strongInteractions[,2]))
##strongInteractorsList = unique(c(second))
tiff(filename=paste("./figures/string_db_analysis/","STRING_", subsetMapped[i,1], ".tiff", sep=""),
width = 5, height = 5, units = 'in', res = 250)
string_db$plot_network(primGenesUnq)
dev.off()
enrichProcess = string_db$get_enrichment(primGenesUnq, category = "Process", methodMT = "fdr", iea=T)
enrichComponent = string_db$get_enrichment(primGenesUnq, category = "Component", methodMT = "fdr", iea=T)
enrichFunction = string_db$get_enrichment(primGenesUnq, category = "Function", methodMT = "fdr", iea=T)
enrichProcess = enrichProcess[1:5, c("pvalue_fdr", "term_description")]
enrichComponent = enrichComponent[1:5, c("pvalue_fdr", "term_description")]
enrichFunction = enrichFunction[1:5, c("pvalue_fdr", "term_description")]
enrichMat = rbind(enrichProcess, enrichFunction, enrichComponent)
enrichMat[,1] = -log10(enrichMat[,1])
enrichMat = cbind(enrichMat, myType=factor(c( rep("Process", 5), rep("Function", 5), rep("Component", 5))) )
nameOrder = enrichMat$term_description[order(enrichMat$myType, enrichMat$pvalue_fdr)]
enrichMat$term_description = factor(enrichMat$term_description, levels=nameOrder)
tiff(filename=paste("./figures/string_db_analysis/","GO_", subsetMapped[i,1], ".tiff", sep=""),
width = 8, height = 4, units = 'in', res = 250)
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) +
labs(x="-log10(pvalue_fdr)", y="") +
facet_grid(myType ~ ., scales="free_y", space="free_y")
dev.off()
}
tiff(filename=paste("./figures/string_db_analysis/","STRING_", subsetMapped[i,1], ".tiff", sep=""),
width = 5, height = 5, units = 'in', res = 250)
string_db$plot_network(primGenesUnq)
dev.off()
enrichProcess = string_db$get_enrichment(primGenesUnq, category = "Process", methodMT = "fdr", iea=T)
enrichComponent = string_db$get_enrichment(primGenesUnq, category = "Component", methodMT = "fdr", iea=T)
enrichFunction = string_db$get_enrichment(primGenesUnq, category = "Function", methodMT = "fdr", iea=T)
enrichProcess = enrichProcess[1:5, c("pvalue_fdr", "term_description")]
enrichComponent = enrichComponent[1:5, c("pvalue_fdr", "term_description")]
enrichFunction = enrichFunction[1:5, c("pvalue_fdr", "term_description")]
enrichMat = rbind(enrichProcess, enrichFunction, enrichComponent)
enrichMat[,1] = -log10(enrichMat[,1])
enrichMat = cbind(enrichMat, myType=factor(c( rep("Process", 5), rep("Function", 5), rep("Component", 5))) )
nameOrder = enrichMat$term_description[order(enrichMat$myType, enrichMat$pvalue_fdr)]
enrichMat$term_description = factor(enrichMat$term_description, levels=nameOrder)
tiff(filename=paste("./figures/string_db_analysis/","GO_", subsetMapped[i,1], ".tiff", sep=""),
width = 8, height = 4, units = 'in', res = 250)
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) +
labs(x="-log10(pvalue_fdr)", y="") +
facet_grid(myType ~ ., scales="free_y", space="free_y")
dev.off()
for (i in 1:1){ ##length(hits) ) {
hit = hits[i]
interactors = string_db$get_neighbors(hit)
interactions = string_db$get_interactions(c(hit, interactors))
strongInteractions = interactions[ interactions[,"combined_score"]>=300, ]
primInteractions =
strongInteractions[(strongInteractions[,1]==hit | strongInteractions[,2]==hit), ]
## sort genes and take top 10
primInteractionsSorted = primInteractions[order(-primInteractions[,"combined_score"]), ]
if (nrow(primInteractionsSorted)>=10){
primInteractionsSorted = primInteractionsSorted[1:10,]
}
primGenesUnq = unique(c(primInteractionsSorted[,1], primInteractionsSorted[,2]))
# secondInteractions =
#   strongInteractions[( strongInteractions[,1] %in% primGenesUnq | strongInteractions[,2] %in% primGenesUnq), ]
##strongInteractorsList = unique(c(strongInteractions[,1], strongInteractions[,2]))
##strongInteractorsList = unique(c(second))
tiff(filename=paste("./figures/string_db_analysis/","STRING_", subsetMapped[i,1], ".tiff", sep=""),
width = 5, height = 5, units = 'in', res = 250)
string_db$plot_network(primGenesUnq)
dev.off()
enrichProcess = string_db$get_enrichment(primGenesUnq, category = "Process", methodMT = "fdr", iea=T)
enrichComponent = string_db$get_enrichment(primGenesUnq, category = "Component", methodMT = "fdr", iea=T)
enrichFunction = string_db$get_enrichment(primGenesUnq, category = "Function", methodMT = "fdr", iea=T)
enrichProcess = enrichProcess[1:5, c("pvalue_fdr", "term_description")]
enrichComponent = enrichComponent[1:5, c("pvalue_fdr", "term_description")]
enrichFunction = enrichFunction[1:5, c("pvalue_fdr", "term_description")]
enrichMat = rbind(enrichProcess, enrichFunction, enrichComponent)
enrichMat[,1] = -log10(enrichMat[,1])
enrichMat = cbind(enrichMat, myType=factor(c( rep("Process", 5), rep("Function", 5), rep("Component", 5))) )
nameOrder = enrichMat$term_description[order(enrichMat$myType, enrichMat$pvalue_fdr)]
enrichMat$term_description = factor(enrichMat$term_description, levels=nameOrder)
tiff(filename=paste("./figures/string_db_analysis/","GO_", subsetMapped[i,1], ".tiff", sep=""),
width = 8, height = 4, units = 'in', res = 250)
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) +
labs(x="-log10(pvalue_fdr)", y="") +
facet_grid(myType ~ ., scales="free_y", space="free_y")
dev.off()
}
for (i in 1:1){ ##length(hits) ) {
hit = hits[i]
interactors = string_db$get_neighbors(hit)
interactions = string_db$get_interactions(c(hit, interactors))
strongInteractions = interactions[ interactions[,"combined_score"]>=300, ]
primInteractions =
strongInteractions[(strongInteractions[,1]==hit | strongInteractions[,2]==hit), ]
## sort genes and take top 10
primInteractionsSorted = primInteractions[order(-primInteractions[,"combined_score"]), ]
if (nrow(primInteractionsSorted)>=10){
primInteractionsSorted = primInteractionsSorted[1:10,]
}
primGenesUnq = unique(c(primInteractionsSorted[,1], primInteractionsSorted[,2]))
# secondInteractions =
#   strongInteractions[( strongInteractions[,1] %in% primGenesUnq | strongInteractions[,2] %in% primGenesUnq), ]
##strongInteractorsList = unique(c(strongInteractions[,1], strongInteractions[,2]))
##strongInteractorsList = unique(c(second))
tiff(filename=paste("./figures/string_db_analysis/","STRING_", subsetMapped[i,1], ".tiff", sep=""),
width = 5, height = 5, units = 'in', res = 250)
string_db$plot_network(primGenesUnq)
dev.off()
enrichProcess = string_db$get_enrichment(primGenesUnq, category = "Process", methodMT = "fdr", iea=T)
enrichComponent = string_db$get_enrichment(primGenesUnq, category = "Component", methodMT = "fdr", iea=T)
enrichFunction = string_db$get_enrichment(primGenesUnq, category = "Function", methodMT = "fdr", iea=T)
enrichProcess = enrichProcess[1:5, c("pvalue_fdr", "term_description")]
enrichComponent = enrichComponent[1:5, c("pvalue_fdr", "term_description")]
enrichFunction = enrichFunction[1:5, c("pvalue_fdr", "term_description")]
enrichMat = rbind(enrichProcess, enrichFunction, enrichComponent)
enrichMat[,1] = -log10(enrichMat[,1])
enrichMat = cbind(enrichMat, myType=factor(c( rep("Process", 5), rep("Function", 5), rep("Component", 5))) )
nameOrder = enrichMat$term_description[order(enrichMat$myType, enrichMat$pvalue_fdr)]
enrichMat$term_description = factor(enrichMat$term_description, levels=nameOrder)
tiff(filename=paste("./figures/string_db_analysis/","GO_", subsetMapped[i,1], ".tiff", sep=""),
width = 8, height = 4, units = 'in', res = 250)
print("lol")
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) +
labs(x="-log10(pvalue_fdr)", y="") +
facet_grid(myType ~ ., scales="free_y", space="free_y")
dev.off()
}
png(filename=paste("./figures/string_db_analysis/","GO_", subsetMapped[i,1], ".tiff", sep=""),
width = 8, height = 4, units = 'in', res = 250)
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) +
labs(x="-log10(pvalue_fdr)", y="") +
facet_grid(myType ~ ., scales="free_y", space="free_y")
dev.off()
for (i in 1:1){ ##length(hits) ) {
hit = hits[i]
interactors = string_db$get_neighbors(hit)
interactions = string_db$get_interactions(c(hit, interactors))
strongInteractions = interactions[ interactions[,"combined_score"]>=300, ]
primInteractions =
strongInteractions[(strongInteractions[,1]==hit | strongInteractions[,2]==hit), ]
## sort genes and take top 10
primInteractionsSorted = primInteractions[order(-primInteractions[,"combined_score"]), ]
if (nrow(primInteractionsSorted)>=10){
primInteractionsSorted = primInteractionsSorted[1:10,]
}
primGenesUnq = unique(c(primInteractionsSorted[,1], primInteractionsSorted[,2]))
# secondInteractions =
#   strongInteractions[( strongInteractions[,1] %in% primGenesUnq | strongInteractions[,2] %in% primGenesUnq), ]
##strongInteractorsList = unique(c(strongInteractions[,1], strongInteractions[,2]))
##strongInteractorsList = unique(c(second))
tiff(filename=paste("./figures/string_db_analysis/","STRING_", subsetMapped[i,1], ".tiff", sep=""),
width = 5, height = 5, units = 'in', res = 250)
string_db$plot_network(primGenesUnq)
dev.off()
enrichProcess = string_db$get_enrichment(primGenesUnq, category = "Process", methodMT = "fdr", iea=T)
enrichComponent = string_db$get_enrichment(primGenesUnq, category = "Component", methodMT = "fdr", iea=T)
enrichFunction = string_db$get_enrichment(primGenesUnq, category = "Function", methodMT = "fdr", iea=T)
enrichProcess = enrichProcess[1:5, c("pvalue_fdr", "term_description")]
enrichComponent = enrichComponent[1:5, c("pvalue_fdr", "term_description")]
enrichFunction = enrichFunction[1:5, c("pvalue_fdr", "term_description")]
enrichMat = rbind(enrichProcess, enrichFunction, enrichComponent)
enrichMat[,1] = -log10(enrichMat[,1])
enrichMat = cbind(enrichMat, myType=factor(c( rep("Process", 5), rep("Function", 5), rep("Component", 5))) )
nameOrder = enrichMat$term_description[order(enrichMat$myType, enrichMat$pvalue_fdr)]
enrichMat$term_description = factor(enrichMat$term_description, levels=nameOrder)
png(filename=paste("./figures/string_db_analysis/","GO_", subsetMapped[i,1], ".tiff", sep=""),
width = 8, height = 4, units = 'in', res = 250)
ggplot(enrichMat, aes(x=pvalue_fdr, y=term_description )) +
geom_segment(aes(yend=term_description), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=myType)) +
scale_colour_brewer(palette="Set1", limits=c("Process", "Function", "Component"), guide=FALSE)  +
theme_bw()+ theme( panel.grid.major.y = element_blank() ) +
labs(x="-log10(pvalue_fdr)", y="") +
facet_grid(myType ~ ., scales="free_y", space="free_y")
dev.off()
}
